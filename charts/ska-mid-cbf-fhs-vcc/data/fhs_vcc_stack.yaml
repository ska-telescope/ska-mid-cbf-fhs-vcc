name: fhsvcc
function: fhsvcc
domain: sensing
command: "FhsVccStackDeviceServer"
instances:
{{ range .Values.instances }}
  - {{ .name }}
{{- end }}
depends_on:
  - device: sys/database/2
readinessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
livenessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
server:
  name: "FhsVccStackDeviceServer"
  instances:
{{- range $index, $instance := $.Values.instances }}
{{- $receptorId := (mod (sub $instance.deviceId 1) 3) }} # device id (1-144) to receptor id (0-2)
  - name: "{{ $instance.name }}"
    classes:
    {{- range $index, $device := $.Values.devices }}
    - name: {{ $device.name }}
      devices:
      - name: "{{ printf "fhs/%s/%03d" $device.nickname ($instance.deviceId | int) }}"
        properties:
          - name: "device_id"
            values:
            - "{{ $device.deviceId | default $instance.deviceId }}"
          - name: "device_version_num"
            values:
            - "{{ $device.deviceVersionNum | default "0.0.1" }}"
          - name: "device_gitlab_hash"
            values:
            - "{{ $device.deviceGitlabHash | default "0" }}"
          - name: "config_location"
            values:
            - "{{ $.Values.hostInfo.configLocation }}"
          - name: "simulation_mode"
            values:
            - "{{ $device.simulationMode | default $.Values.simulationMode }}"
          - name: "emulation_mode"
            values:
            - "{{ $device.emulationMode | default $.Values.emulationMode }}"
          - name: "emulator_ipblock_id"
            values: 
            - "{{ $device.emulatorIpBlockId }}"
          - name: "emulator_id"
            values:
            - "{{ $instance.emulatorId }}"
          - name: "firmware_ipblock_id"
            values: 
            - "{{ printf $device.firmwareIpBlockId $receptorId }}"
    {{- end }}
    - name: "VCCAllBandsController"
      devices:
      - name: "{{ printf "fhs/%s/%03d" "vcc-all-bands" ($instance.deviceId | int) }}"
        properties:
          - name: "device_id"
            values:
            - "{{ $instance.deviceId }}"
          - name: "device_version_num"
            values:
            - "0.0.1"
          - name: "device_gitlab_hash"
            values:
            - "0"
          - name: "config_location"
            values:
            - "{{ $.Values.hostInfo.configLocation }}"
          - name: "simulation_mode"
            values:
            - "0"
          - name: "emulation_mode"
            values:
            - "1"
          - name: wideband_input_buffer_fqdn
            values:
            - "{{ printf "fhs/%s/%03d" "wib" ($instance.deviceId | int) }}"
          - name: vcc123_channelizer_fqdn
            values:
            - "{{ printf "fhs/%s/%03d" "vcc" ($instance.deviceId | int) }}"
          - name: fs_selection_fqdn
            values:
            - "{{ printf "fhs/%s/%03d" "frequency-slice-selection" ($instance.deviceId | int) }}"
          - name: wideband_frequency_shifter_fqdn
            values:
            - "{{ printf "fhs/%s/%03d" "wfs" ($instance.deviceId | int) }}"
          - name: mac_200_fqdn
            values:
            - "{{ printf "fhs/%s/%03d" "mac200" ($instance.deviceId | int) }}"
          - name: packet_validation_fqdn
            values:
            - "{{ printf "fhs/%s/%03d" "packetvalidation" ($instance.deviceId | int) }}"
          - name: vcc45_channelizer_fqdn # yet to be implemented
            values:
            - "placeholder"
{{- end }}

image:
  registry: "{{.Values.midcbf.image.registry}}"
  image: "{{.Values.midcbf.image.image}}"
  tag: "{{.Values.midcbf.image.tag}}"
  pullPolicy: "{{.Values.midcbf.image.pullPolicy}}"
environment_variables:
  - name: CONFIG_MAP_LOCATION
    value: "{{ .Values.hostInfo.configLocation }}"

volume:
  existingClaimName: "fhs-vcc-bitstream-pv"
  mountPath: "{{ .Values.lowLevel.bitstreamPath }}"
  readOnly: false

extraVolumes:
  - name: low-level-config-mount
    configMap: 
      name:  low-level-configmap
extraVolumeMounts:
  - name: low-level-config-mount
    mountPath: "{{ .Values.hostInfo.configLocation }}"
