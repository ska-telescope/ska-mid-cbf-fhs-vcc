name: fhsvcc
function: fhsvcc
domain: sensing
command: "FhsVccStackDeviceServer"
instances:
{{ range .Values.instances }}
  - {{ .name }}
{{- end }}
depends_on:
  - device: sys/database/2
readinessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
livenessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
server:
  name: "FhsVccStackDeviceServer"
  instances:
  {{- range $index, $instance := $.Values.instances }}
  - name: "{{ $instance.name }}"
    classes:
    {{- range $index, $device := $.Values.devices }}
    {{- $deviceId := $device.deviceId | default $instance.deviceId | int }}
    - name: {{ $device.name }}
      devices:
      {{- range $multiplicity := (untilStep 1 ($device.multiplicity | int | default 1 | add1 | int ) 1) }}
      {{- $scope := dict "deviceId" $deviceId "deviceId000" (printf "%03d" $deviceId) "receptorId" (mod (sub $deviceId 1) 3) "multiplicity" $multiplicity }}
      - name: {{ tpl $device.path $scope }}
        properties:
          {{- range $name, $default := $.Values.properties }}
          - name: {{ snakecase $name }}
            values:
            - "{{ tpl ((get $device $name) | default (get $instance $name) | default $default) $scope }}"
          {{- end }}
          {{- range $index, $property := $device.properties }}
          - name: {{ $property.name }}
            values:
            {{- range $index, $value := $property.values }}
            - "{{ tpl $value $scope }}"
            {{- end }}
          {{- end }}
      {{- end }}
    {{- end }}
{{- end }}

image:
  registry: "{{.Values.midcbf.image.registry}}"
  image: "{{.Values.midcbf.image.image}}"
  tag: "{{.Values.midcbf.image.tag}}"
  pullPolicy: "{{.Values.midcbf.image.pullPolicy}}"

volume:
  existingClaimName: "fhs-vcc-bitstream-pv"
  mountPath: "{{ .Values.bitstreamMountPath }}"
  readOnly: false
