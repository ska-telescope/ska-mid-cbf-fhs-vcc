# Default values for ska-mid-cbf HELM chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

display: ":0"
xauthority: "~/.Xauthority"

enabled: true

system: csp
subsystem: fhs-vcc
telescope: SKA-mid

labels:
  app: ska-mid-cbf-fhs-vcc

global:
  minikube: false
  k3d: false
  exposeDatabaseDS: true
  exposeAllDS: false
  tango_host: databaseds-tango-base-test:10000
  dsconfig:
    image:
      registry: artefact.skao.int
      image: ska-tango-images-tango-dsconfig
      tag: 1.5.13
      pullPolicy: IfNotPresent

midcbf:
  image:
    registry: docker.io/library
    image: ska-mid-cbf-fhs-vcc
    tag: 0.1.0
    pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 500m
    memory: 100Mi
    ephemeral-storage: 512Mi
  requests:
    cpu: 250m
    memory: 50Mi
    ephemeral-storage: 256Mi

nodeSelector: {}

affinity: {}

tolerations: []

hostInfo:
  environment: "minikube"
  hostIP: "127.0.0.1"
  externalPort: 10001
  clusterDomain: cluster.local
  fhsServerId: fhs01
  namespace: "ska-mid-cbf"

bitstreamMountPath: "/app/mnt/bitstream"

bitstreamDownloadJob:
  enabled: True

# -------------------------------------------------DEVICE SERVER CONFIGURATION -------------------------------------------------

# As defined in fhs-vcc-stack.yaml, the fhs stack and underlying devices are generated dynamically from the following config.
# - `properties` defines a set of properties that are common to all devices in the stack. NOTE: values must be strings.
# - `devices` defines the set of devices contained by every stack.
#    - Each device must contain `name` and `path`.
#    - Each device may optionally define `properties` to pass custom properties.
# - `instances` defines the stacks of devices
# For every property defined in `properties`, the default value can be overridden at the instance or device level.
# For example, if `simulationMode` is defined in `properties`, the property associated with each device will resolve in the following order:
# - `device.simulationMode`, defined in `devices`
# - `instance.simulationMode`, defined in `instances`
# - `simulationMode.default`, defined in `properties` (the global, default value)
# Every string value in name, path, properties, or a instance or device-scoped override, may contain the following placeholder which will be replaced:
#   - `{{.deviceId}}` will be replaced with the device id of the device (deviceId must be defined in either the device or instance)
#   - `{{.deviceId000}}` will be replaced with the device id of the device, padded with zeros
#   - `{{.receptorId}}` will be replaced with the receptor id of the device (calculated by (deviceId - 1) % 3)
#   - `{{.multiplicity}}` will be replaced with index of the iteration in the range of `devices.multiplicity`

# the default tango properties in each device. optionally provide a default, global value
properties:
  deviceId: "{{ .deviceId }}"
  deviceVersionNum: "0.0.1"
  deviceGitlabHash: "0"
  simulationMode: "0"
  emulationMode: "1"
  emulatorBaseUrl: "ska-mid-cbf-emulators.svc.cluster.local:5001"
  bitstreamPath: "/app/mnt/bitstream"
  bitstreamId: "agilex-vcc"
  bitstreamVersion: "0.0.15"
  emulatorId: "vcc-emulator-{{.deviceId}}"
  emulatorIpBlockId: ""
  firmwareIpBlockId: ""

# the devices in each stack. optionally override any property defined in `properties`. to add extra properties, provide a `properties` dict
devices:
  - name: "Mac200"
    path: "fhs/mac200/{{.deviceId000}}"
    emulatorIpBlockId: "ethernet_200g"
    firmwareIpBlockId: "eth200g_{{.receptorId}}"
    properties:
      - name: MacType
        values:
          - "mac200"
  - name: "PacketValidation"
    path: "fhs/packetvalidation/{{.deviceId000}}"
    emulatorIpBlockId: "packet_validation"
    firmwareIpBlockId: "packet_validation_unimplemented"
  - name: "WidebandInputBuffer"
    path: "fhs/wib/{{.deviceId000}}"
    emulatorIpBlockId: "wideband_input_buffer"
    firmwareIpBlockId: "wideband_input_buffer_unimplemented"
    properties:
      - name: health_monitor_poll_interval
        values:
          - "3"
  - name: "WidebandFrequencyShifter"
    path: "fhs/wfs/{{.deviceId000}}"
    emulatorIpBlockId: "wideband_frequency_shifter"
    firmwareIpBlockId: "wideband_frequency_shifter_unimplemented"
  - name: "B123VccOsppfbChanneliser"
    path: "fhs/vcc/{{.deviceId000}}"
    emulatorIpBlockId: "b123vcc"
    firmwareIpBlockId: "receptor{{.receptorId}}_band123_vcc"
  - name: "FrequencySliceSelection"
    path: "fhs/fss/{{.deviceId000}}"
    emulatorIpBlockId: "fs_selection_26_2_1"
    firmwareIpBlockId: "receptor{{.receptorId}}_fs_selector"
  - name: "B123WidebandPowerMeter"
    path: "fhs/b123wpm/{{.deviceId000}}"
    emulatorIpBlockId: "b123_wideband_power_meter"
    firmwareIpBlockId: "receptor{{.receptorId}}_band123_wideband_power_meter"
  - name: "B45AWidebandPowerMeter"
    path: "fhs/b45awpm/{{.deviceId000}}"
    emulatorIpBlockId: "b45a_wideband_power_meter"
    firmwareIpBlockId: "receptor{{.receptorId}}_band45a_wideband_power_meter"
  - name: "B5BWidebandPowerMeter"
    path: "fhs/b5bwpm/{{.deviceId000}}"
    emulatorIpBlockId: "b5b_wideband_power_meter"
    firmwareIpBlockId: "receptor{{.receptorId}}_band5b_wideband_power_meter"
  - name: "FSWidebandPowerMeter"
    multiplicity: 26
    path: "fhs/fs{{.multiplicity}}wpm/{{.deviceId000}}"
    emulatorIpBlockId: "fs{{.multiplicity}}_wideband_power_meter"
    firmwareIpBlockId: "receptor{{.receptorId}}_fs{{.multiplicity}}_power_meter"
  - name: "Packetizer"
    path: "fhs/packetizer/{{.deviceId000}}"
    emulatorIpBlockId: "packetizer"
    firmwareIpBlockId: "fs_packetizer"
  - name: "VCCAllBandsController"
    path: "fhs/vcc-all-bands/{{.deviceId000}}"
    properties:
      - name: wideband_input_buffer_fqdn
        values:
          - "fhs/wib/{{.deviceId000}}"
      - name: vcc123_channelizer_fqdn
        values:
          - "fhs/vcc/{{.deviceId000}}"
      - name: vcc45_channelizer_fqdn # yet to be implemented
        values:
          - "placeholder"
      - name: fs_selection_fqdn
        values:
          - "fhs/fss/{{.deviceId000}}"
      - name: wideband_frequency_shifter_fqdn
        values:
          - "fhs/wfs/{{.deviceId000}}"
      - name: mac_200_fqdn
        values:
          - "fhs/mac200/{{.deviceId000}}"
      - name: packet_validation_fqdn
        values:
          - "fhs/packetvalidation/{{.deviceId000}}"
      - name: b123_wideband_power_meter_fqdn
        values:
          - "fhs/b123wpm/{{.deviceId000}}"
      - name: b45a_wideband_power_meter_fqdn
        values:
          - "fhs/b45awpm/{{.deviceId000}}"
      - name: b5b_wideband_power_meter_fqdn
        values:
          - "fhs/b5bwpm/{{.deviceId000}}"
      - name: fs_wideband_power_meter_fqdn
        values:
          - "fhs/fs<multiplicity>wpm/{{.deviceId000}}"
      - name: packetizer_fqdn
        values:
          - "fhs/packetizer/{{.deviceId000}}"

# the top-level stacks, one for every device id. optionally override any property defined in `properties` (if it hasn't been overridden at the device level)
VCCUnits:
  - id: "fhs-vcc-unit-1"
    is_emulated: true
    networkSwitchId: 127.0.0.1
    bmc-endpoint: "ip"
    instancesRange: [1, 6]
  - id: "fhs-vcc-unit-2"
    is_emulated: true
    networkSwitchId: 127.0.0.1
    bmc-endpoint: "ip"
    instancesRange: [7, 12]

deviceServerName: "fhs-vcc-stack"
