# Default values for ska-mid-cbf HELM chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

display: ":0"
xauthority: "~/.Xauthority"

enabled: true

system: csp
subsystem: fhs-vcc
telescope: SKA-mid

labels:
  app: ska-mid-cbf-fhs-vcc

global:
  minikube: false
  k3d: false
  exposeDatabaseDS: true
  exposeAllDS: false
  tango_host: databaseds-tango-base-test:10000
  dsconfig:
    image:
      registry: artefact.skao.int
      image: ska-tango-images-tango-dsconfig
      tag: 1.5.13
      pullPolicy: IfNotPresent

midcbf:
  image:
    registry: docker.io/library
    image: ska-mid-cbf-fhs-vcc
    tag: 0.1.1
    pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 500m
    memory: 100Mi
    ephemeral-storage: 512Mi
  requests:
    cpu: 250m
    memory: 50Mi
    ephemeral-storage: 256Mi

nodeSelector: {}

affinity: {}

tolerations: []

hostInfo:
  environment: "minikube"
  hostIP: "127.0.0.1"
  externalPort: 10001
  clusterDomain: cluster.local
  fhsServerId: fhs01
  namespace: "ska-mid-cbf"

bitstreamMountPath: "/app/mnt/bitstream"

bitstreamDownloadJob:
  enabled: True

# -------------------------------------------------DEVICE SERVER CONFIGURATION -------------------------------------------------

# As defined in fhs-vcc-stack.yaml, the fhs stack and underlying devices are generated dynamically from the following config.
# - `properties` defines a set of properties that are common to all devices in the stack. NOTE: values must be strings.
# - `devices` defines the set of devices contained by every stack.
#    - Each device must contain `name` and `path`.
#    - Each device may optionally define `properties` to pass custom properties.
# - `instances` defines the stacks of devices
# For every property defined in `properties`, the default value can be overridden at the instance or device level.
# For example, if `simulationMode` is defined in `properties`, the property associated with each device will resolve in the following order:
# - `device.simulationMode`, defined in `devices`
# - `instance.simulationMode`, defined in `instances`
# - `simulationMode.default`, defined in `properties` (the global, default value)
# Every string value in name, path, properties, or a instance or device-scoped override, may contain the following placeholder which will be replaced:
#   - `{{.deviceId}}` will be replaced with the device id of the device (deviceId must be defined in either the device or instance)
#   - `{{.deviceId000}}` will be replaced with the device id of the device, padded with zeros
#   - `{{.receptorId}}` will be replaced with the receptor id of the device (calculated by (deviceId - 1) % 3)
#   - `{{.multiplicity}}` will be replaced with index of the iteration in the range of `devices.multiplicity`

# the default tango properties in each device. optionally provide a default, global value
properties:
  deviceId: ""
  deviceVersionNum: "0.0.1"
  deviceGitlabHash: "0"
  simulationMode: "0"
  emulationMode: "1"
  emulatorBaseUrl: "ska-mid-cbf-emulators.svc.cluster.local:5001"
  bitstreamPath: "/app/mnt/bitstream"
  bitstreamId: "agilex-vcc"
  bitstreamVersion: "0.0.16"
  emulatorId: "vcc-emulator-{{.deviceId}}"
  emulatorIpBlockId: ""
  firmwareIpBlockId: ""

# the devices in each stack. optionally override any property defined in `properties`. to add extra properties, provide a `properties` dict
devices:
  - name: "Ethernet200Gb"
    path: "fhs/ethernet200g/{{.deviceId000}}"
    emulatorIpBlockId: "ethernet_200g"
    firmwareIpBlockId: "eth200g_{{.receptorId}}"
    properties:
      - name: EthernetMode
        values:
          - "200GbE"
      - name: health_monitor_poll_interval
        values:
          - "60"
  - name: "B123WidebandPowerMeter"
    path: "fhs/b123wpm/{{.deviceId000}}"
    emulatorIpBlockId: "b123_wideband_power_meter"
    firmwareIpBlockId: "receptor{{.receptorId}}_band123_wideband_power_meter"
  - name: "B45AWidebandPowerMeter"
    path: "fhs/b45awpm/{{.deviceId000}}"
    emulatorIpBlockId: "b45a_wideband_power_meter"
    firmwareIpBlockId: "receptor{{.receptorId}}_band45a_wideband_power_meter"
  - name: "B5BWidebandPowerMeter"
    path: "fhs/b5bwpm/{{.deviceId000}}"
    emulatorIpBlockId: "b5b_wideband_power_meter"
    firmwareIpBlockId: "receptor{{.receptorId}}_band5b_wideband_power_meter"
  - name: "FSWidebandPowerMeter"
    multiplicity: 26
    path: "fhs/fs{{.multiplicity}}wpm/{{.deviceId000}}"
    emulatorIpBlockId: "fs{{.multiplicity}}_wideband_power_meter"
    firmwareIpBlockId: "receptor{{.receptorId}}_fs{{.multiplicity}}_power_meter"
  - name: "VCCAllBandsController"
    path: "fhs/vcc-all-bands/{{.deviceId000}}"
    properties:
      - name: vcc45_channelizer_fqdn # yet to be implemented
        values:
          - "placeholder"
      - name: ethernet_200g_fqdn
        values:
          - "fhs/ethernet200g/{{.deviceId000}}"
      - name: b123_wideband_power_meter_fqdn
        values:
          - "fhs/b123wpm/{{.deviceId000}}"
      - name: b45a_wideband_power_meter_fqdn
        values:
          - "fhs/b45awpm/{{.deviceId000}}"
      - name: b5b_wideband_power_meter_fqdn
        values:
          - "fhs/b5bwpm/{{.deviceId000}}"
      - name: fs_wideband_power_meter_fqdn
        values:
          - "fhs/fs<multiplicity>wpm/{{.deviceId000}}"
      - name: ll_props
        values:
          B123VccOsppfbChannelizer:
            emulator_ip_block_id: "b123vcc"
            firmware_ip_block_id: "receptor{{.receptorId}}_band123_vcc"
          FrequencySliceSelection:
            emulator_ip_block_id: "fs_selection_26_2_1"
            firmware_ip_block_id: "receptor{{.receptorId}}_fs_selector"
          PacketValidation:
            emulator_ip_block_id: "packet_validation"
            firmware_ip_block_id: "packet_validation_unimplemented"
          WidebandFrequencyShifter:
            emulator_ip_block_id: "wideband_frequency_shifter"
            firmware_ip_block_id: "wideband_frequency_shifter_unimplemented"
          WidebandInputBuffer:
            emulator_ip_block_id: "wideband_input_buffer"
            firmware_ip_block_id: "wideband_input_buffer_unimplemented"
            health_monitor_poll_interval: "3"
          VCCStreamMerge1:
            emulator_ip_block_id: "vcc_stream_merge1"
            firmware_ip_block_id: "receptor{{.receptorId}}_vcc_stream_merge1"
          VCCStreamMerge2:
            emulator_ip_block_id: "vcc_stream_merge2"
            firmware_ip_block_id: "receptor{{.receptorId}}_vcc_stream_merge2"

# the top-level stacks, one for every device id. optionally override any property defined in `properties` (if it hasn't been overridden at the device level)
instances:
  - name: fhs-vcc-1
    deviceId: "1"
  - name: fhs-vcc-2
    deviceId: "2"


deviceServers:
  fhs-vcc-stack:
    enabled: true
    file: "data/fhs_vcc_stack.yaml"

gitlab_bitstream_url_override: "https://gitlab.com/ska-telescope/ska-mid-cbf-bitstreams/-/archive/cip-3569/ska-mid-cbf-bitstreams-cip-3569.tar.gz?path=raw/ska-mid-cbf-agilex-vcc"